# .github/workflows/build.yml (v1)

# اسم سير العمل الذي سيظهر في قسم Actions في GitHub
name: Build and Deploy Plugins

# الـ "محفز": متى سيعمل هذا الروبوت؟
on:
  push:
    # سيعمل فقط عند رفع أي تعديل على الفرع الرئيسي
    branches:
      - master
  # يسمح بتشغيله يدويًا من واجهة GitHub Actions
  workflow_dispatch:

jobs:
  build:
    # سيتم تشغيل هذا العمل على أحدث نسخة من نظام Ubuntu
    runs-on: ubuntu-latest

    steps:
      # الخطوة الأولى: تحميل نسخة من الكود الخاص بك (فرع master)
      - name: Checkout Master Branch
        uses: actions/checkout@v3

      # الخطوة الثانية: إعداد بيئة جافا (JDK 11)، وهي ضرورية لتشغيل المترجم
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: gradle

      # الخطوة الثالثة: إعطاء صلاحية التنفيذ لسكربت Gradle
      - name: Grant Execute Permission to gradlew
        run: chmod +x gradlew

      # الخطوة الرابعة: تشغيل عملية البناء والتجميع الفعلية
      # سيقوم Gradle بتجميع كل إضافة وإنشاء ملف plugins.json
      - name: Build with Gradle
        run: ./gradlew assemble

      # الخطوة الخامسة: النشر في فرع builds
      # هذه الخطوة تأخذ المخرجات النهائية وتنشرها في فرع منفصل
      - name: Deploy to Builds Branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          # مفتاح سري يتم إنشاؤه تلقائيًا ليتمكن الروبوت من الرفع إلى مشروعك
          github_token: ${{ secrets.GITHUB_TOKEN }}
          # اسم الفرع الذي سيتم نشر الملفات النهائية فيه
          publish_branch: builds
          # المجلد الذي يحتوي على الملفات المراد نشرها (مجلد المخرجات الافتراضي لـ Gradle)
          publish_dir: build/cloudstream/
          # سيقوم بحذف المحتويات القديمة للفرع قبل نشر الجديدة لضمان عدم تراكم الملفات
          force_orphan: true
