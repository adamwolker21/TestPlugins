# This workflow will build a Java project with Gradle and cache dependencies
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build with Gradle

# Controls when the workflow will run
on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # تم التعديل: إضافة صلاحيات للكتابة في المستودع لنشر الملفات
    permissions:
      contents: write

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Grant execute permission for gradlew
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      # Build with Gradle
      - name: Build with Gradle
        run: ./gradlew build

      # --- الخطوات الجديدة لنشر الملفات ---
      - name: Deploy to builds branch
        # هذه الخطوة تعمل فقط عند الرفع على فرع master
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          # 1. تهيئة Git بمعلومات البوت
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          # 2. استنساخ فرع builds في مجلد منفصل
          git clone --quiet --branch=builds "https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git" builds

          # 3. نسخ الملفات الناتجة من عملية البناء إلى المجلد الجديد
          cp -r build/cloudstream_plugins/* builds/
          
          # 4. الدخول للمجلد وعمل Commit و Push للتغييرات
          cd builds
          git add -A
          if ! git diff-index --quiet HEAD; then
            git commit -m "Deploy plugins from ${{ github.sha }}"
            git push
          else
            echo "No changes to deploy."
          fi
